# -*- coding: utf-8 -*-
# Generated by Django 1.11.26 on 2019-12-18 10:08
from __future__ import unicode_literals

import communities.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(help_text='The name of your community', max_length=100)),
                ('slug', models.SlugField(help_text='Short name (consisting only of letters a-z, numbers, underscores or hyphens) for use in links. Note: this cannot be changed afterwards, except by site admins.', unique=True)),
                ('short_description', models.TextField()),
                ('full_description', models.TextField()),
                ('badge', models.ImageField(upload_to=communities.utils.UploadNameFromContent('community/badges/', 'badge'))),
                ('rules', models.TextField()),
                ('group_policy', models.CharField(choices=[('invite-only', 'Invitation only'), ('free-join', 'Anyone can join'), ('verified-join', 'Anyone can join, but must be verified by a moderator')], default='invite-only', max_length=32, verbose_name='Group membership')),
                ('memberlist_visibility', models.CharField(choices=[('hidden', 'Hidden'), ('private', 'Visible to other members only'), ('visible', 'Visible to all logged in users')], default='hidden', max_length=32, verbose_name='Member list')),
                ('drawpile_server', models.CharField(blank=True, help_text='The hostname of your drawpile server, if any. (Include the port too, if not the default.)', max_length=100)),
                ('list_server', models.URLField(blank=True, help_text='The URL to your list server, if any.')),
                ('homepage', models.URLField(blank=True, help_text='The URL to your homepage, if any.')),
                ('guests_allowed', models.BooleanField(default=True, verbose_name='Guest users can log in')),
                ('account_host', models.CharField(blank=True, max_length=200)),
                ('require_group_membership', models.BooleanField(default=False)),
                ('trust_members', models.BooleanField(default=False, verbose_name="Group members get the 'Trusted' flag")),
                ('host_policy', models.CharField(choices=[('all-host', 'Everyone can host sessions'), ('member-host', 'Only group members can host'), ('limited-host', 'Only select users can host')], default='all-host', max_length=16, verbose_name='Who can host sessions?')),
                ('content_rating', models.CharField(choices=[('sfw', 'Safe-For-Work content only'), ('mixed', 'Adult content is permitted but must be tagged'), ('adult', 'This is an adults only community')], default='mixed', max_length=16)),
                ('status', models.CharField(choices=[('submitted', 'Submitted, awaiting review'), ('resubmit', 'Reviewed, awaiting resubmission'), ('accepted', 'Accepted'), ('rejected', 'Rejected (with prejudice)')], default='submitted', max_length=32)),
                ('review_message', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'communities',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('pending', 'Pending approval'), ('invited', 'Invited'), ('member', 'Member'), ('mod', 'Moderator'), ('admin', 'Admin'), ('banned', 'Banned')], max_length=16)),
                ('is_host', models.BooleanField(default=False)),
                ('is_trusted', models.BooleanField(default=False)),
                ('ban_reason', models.CharField(blank=True, help_text='Why this user was banned. Visible to admins and this user only.', max_length=200)),
                ('community', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='communities.Community')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='community',
            name='users',
            field=models.ManyToManyField(through='communities.Membership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='membership',
            unique_together=set([('user', 'community')]),
        ),
    ]
